## Example on how to chain feeds together to create a transcoding pipeline.
##
## 'vidfeed_source' will time out and cease to exist after 5 seconds,
## but only if 'stream/vid_ondemand' is used. Connecting to
## 'stream/vid_continous' just once will keep both the 'vidfeed_source'
## and 'vidfeed_continuous' running indefinitely.
##
## This shows how feeds depend on each other. The parent
## feed cannot be closed until all dependant feeds close.

## IP address on which the server will be listening.
listenaddr: '127.0.0.1'

## Network port on which the server will be listening.
listenport: 8090

#logdir: /var/log/voyandz

feeds:
  vidfeed_source:
    command: ffmpeg -re -stream_loop -1 -i /opt/vid/vid2.ts -codec copy -f mpegts -
    mode: 5
  vidfeed_ondemand:
    command: ffmpeg -i - -f rawvideo -vcodec rawvideo -s 176x144 -r 15 -pix_fmt yuv420p -
    mode: on-demand
    feed: vidfeed_source
  vidfeed_continuous:
    command: ffmpeg -i - -f rawvideo -vcodec rawvideo -s 176x144 -r 15 -pix_fmt yuv420p -
    mode: continuous
    feed: vidfeed_source

## Streams
streams:
  vid_ondemand:
    command: >
      ffmpeg -analyzeduration 0 -f rawvideo -vcodec rawvideo -s 176x144 -r 15 -pix_fmt yuv420p -i -
      -f mpjpeg -qmin 1 -qmax 6 -r 15 -boundary_tag ffmpeg -
    type: stream
    mimetype: multipart/x-mixed-replace;boundary=ffmpeg
    feed: vidfeed_ondemand
  vid_continuous:
    command: >
      ffmpeg -analyzeduration 0 -f rawvideo -vcodec rawvideo -s 176x144 -r 15 -pix_fmt yuv420p -i -
      -f mpjpeg -qmin 1 -qmax 6 -r 15 -boundary_tag ffmpeg -
    type: stream
    mimetype: multipart/x-mixed-replace;boundary=ffmpeg
    feed: vidfeed_continuous

## Extra pages
pages:
  ## Dump config at /config
  config: false
  ## Dump statistics at /stat
  stat: true
